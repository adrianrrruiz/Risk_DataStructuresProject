#include <iostream>
#include <fstream>
#include <vector>
#include <sstream>

using namespace std;

struct Pais {
    int CodigoContinente;
    int Codigo;
    string Nombre;
    vector<int> Relaciones;
    int infanteria;
};

struct Continente {
    int Codigo;
    string Nombre;
    int numeroPaises;
    vector<Pais> paises;

};

struct Jugador{
    string color;
    string Nombre;
    vector<Pais> territorios;
    int infanteria;
};

struct Carta {
    string figura;
    string codigoPais;
};

struct Juego {
    vector<Continente> Continentes;
    vector<Jugador> jugadores;
    vector <Carta> cartas;
};

void leerContinentes(Juego &juego);
void leerPaises(Juego &juego);
void leerRelaciones(Juego &juego);
void imprimirInformacion(Juego &juego);

int main() {
    Juego juego;
    leerContinentes(juego);
    leerPaises(juego);
    leerRelaciones(juego);
    imprimirInformacion(juego);


    return 0;
}

void leerContinentes(Juego &juego) {
    ifstream file("Files\\Continentes.txt");
    string linea, nombre;
    int codigo, numeroPaises;

    if (file.is_open()) {
        while (!file.eof()) {
            getline(file, linea);
            istringstream isContinente(linea);
            isContinente >> codigo;
            isContinente.ignore();
            getline(isContinente, nombre, ',');
            isContinente >> numeroPaises;

            Continente continente;
            continente.Codigo = codigo;
            continente.Nombre = nombre;
            continente.numeroPaises = numeroPaises;
            juego.Continentes.push_back(continente);
        }
    }
    file.close();
}

void leerPaises(Juego &juego){
    ifstream file("Files\\Paises.txt");
    string linea, nombre;
    int codigoContinente, codigo;

    if (file.is_open()) {
        while (!file.eof()) {
            getline(file, linea);
            istringstream isPais(linea);
            isPais >> codigoContinente;
            isPais.ignore();
            isPais >> codigo;
            isPais.ignore();
            getline(isPais, nombre);


            Pais pais;
            pais.CodigoContinente = codigoContinente;
            pais.Codigo = codigo;
            pais.Nombre = nombre;

            for(int i = 0; i<= juego.Continentes.size(); i++){
                if(juego.Continentes[i].Codigo == pais.CodigoContinente){
                    juego.Continentes[i].paises.push_back(pais);
                }
            }
        }
    }
    file.close();
}

void leerRelaciones(Juego &juego) {
    ifstream archivo("Files\\Relaciones.txt");
    string linea;
    int codigo;

    if (archivo.is_open()) {
        while (getline(archivo, linea)) {
            istringstream iss(linea);
            iss >> codigo;
            char separador;
            iss >> separador;

            for (int i = 0; i < juego.Continentes.size(); i++) {
                for (int j = 0; j < juego.Continentes[i].paises.size(); j++) {
                    if (juego.Continentes[i].paises[j].Codigo == codigo) {
                        int relacionado;
                        while (iss >> relacionado) {
                            juego.Continentes[i].paises[j].Relaciones.push_back(relacionado);
                            if (iss.peek() == ',') {
                                iss.ignore();
                            }
                        }
                    }
                }
            }
        }
    }
    archivo.close();
}

void imprimirInformacion(Juego &juego){

    for (const Continente &continente : juego.Continentes) {
        cout << continente.Codigo << " " << continente.Nombre << " " << endl;
        for(const Pais &pais : continente.paises){
            cout << pais.Codigo << " " << pais.Nombre << " Relaciones: "<<endl;
            for(const int &i : pais.Relaciones){
                cout<< i << "||";
            }
            cout << endl;
        }
    }

}